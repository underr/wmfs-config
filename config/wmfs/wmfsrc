    #
    # WMFS2 configuration file
    #
     
    # Possible file inclusion:
@include "~/.config/wmfs/themes"
     
    # Multi theme section
    [bars]
     
      # Position:
      #
      # 0  Top
      # 1  Bottom
      # 2  Hide
     
      # Element type:
      #
      # t  Tags
      # s  Statustext (will take available space)
      # y  Systray (can be set only ONE time among all element)
      # l  Launcher (will be expended at launcher use)
     
      [bar]
         position = 1
         screen = 0
         elements = "tls"   # element order in bar
         theme = "dark"
      [/bar]

    [/bars]
     
    [tags]
     
      # Tag wrapping navigation
      circular = true
     
      # Use no screen option or screen = -1 to set tag on each screen
      [tag]
          screen = -1
          name = ""
      [/tag]
     
      [tag] name = "" screen = -1 [/tag]
      [tag] name = "" screen = -1 [/tag]
      [tag] name = "" screen = -1 [/tag]
      #[tag] name = " " screen = -1 [/tag]
      [tag] name = "" screen = -1 [/tag]
     
     
      #Mousebinds associated to Tags element button
      [mouse] button = "1" func = "tag_click" [/mouse]
      [mouse] button = "4" func = "tag_next"  [/mouse]
      [mouse] button = "5" func = "tag_prev"  [/mouse]
     
     
    [/tags]
     
    [client]
     
      # Padding between clients (default: 0) :
      padding = 60
     
      # Give focus to new created client (default = false)
      autofocus = true
     
      theme = "default"
      key_modifier = "Super"
     
      # Focus type:
      #  enter : focus follow mouse (default)
      #  click : click to focus
      #  everything-else : disable mouse focus support
      focus = enter
     
      [mouse] button = "1" func = "client_focus_click"    [/mouse]
      [mouse] button = "1" func = "mouse_swap"            [/mouse]
      [mouse] button = "2" func = "mouse_tab"             [/mouse]
      [mouse] button = "3" func = "mouse_resize"          [/mouse]
      [mouse] button = "4" func = "client_focus_next_tab" [/mouse]
      [mouse] button = "5" func = "client_focus_prev_tab" [/mouse]
     
    [/client]
     
    [rules]
     
      [rule]
      # use instance = "*" for a all-clients rule
      instance = "mpv[]"

      # role = "" name = "" theme = "default"

      screen = 0

      free = true
      tab = false
      ignore_tag = false
      [/rule]
      [rule]
      instance = "nitrogen"

      free = true
      tab = false
      ignore_tag = false
      [/rule]
      [rule]
      instance = "lxappearance"

      free = true
      tab = false
      ignore_tag = false
      [/rule]
      [rule]
      instance = "fontforge"
      free = true
      [/rule]
      [rule]
      instance = "xfce4-appfinder"
      free = true
      ignore_tag = false
      [/rule]
      [rule]
      instance = "xarchiver"

      free = true
      tab = false
      ignore_tag = false
      [/rule]
      [rule]
      instance = "skype"

      free = true
      tab = false
      ignore_tag = false
      [/rule]            
      [rule]
      instance = "viewnior"

      free = true
      tab = false
      ignore_tag = false
      [/rule]      
      [rule]
      instance = "xev"

      free = true
      tab = false
      ignore_tag = false
      [/rule]      
      [rule]
      instance = "ranger"

      free = true
      tab = false
      ignore_tag = false
      [/rule]      

    [/rules]
     
    [launchers]
     
      # command can be an uicb function or an uicb function + extension (see example)
      [launcher]
         name = "exec"
         prompt = "Run:"
     
         # Example of uicb + ext:
         #   command = "spawn xterm -e"
         command = "spawn"
     
         width = 150
      [/launcher]
     
      [launcher]
     name = "l-man"
     prompt = "man:"
     command = "spawn termite -e man"
     width = 150
  [/launcher]
  [launcher]
     name = "rn"
     prompt = "ranger:"
     command = "spawn termite -e rn"
     width = 300
  [/launcher]

    [/launchers]
     
    [keys]
    [key] mod = {"Super"} key = "u" func = "spawn" cmd = "termite -e ranger" [/key]
    [key] mod = {"Super"} key = "w" func = "spawn" cmd = "firefox" [/key]
    [key] mod = {"Super"} key = "e" func = "spawn" cmd = "subl" [/key]
    [key] mod = {"Super", "Shift"} key = "t" func = "spawn" cmd = "thunar" [/key]
    [key] mod = {"Super", "Shift"} key = "f" func = "spawn" cmd = "dolphin" [/key]
    [key] mod = {"Super"} key = "n" func = "spawn" cmd = "termite -e ncmpcpp" [/key] 
    [key] mod = {"Alt"} key = "p" func = "spawn" cmd = "mpc toggle" [/key]
    [key] mod = {"Super"} key = "c" func = "spawn" cmd = "gcolor2" [/key]
    [key] mod = {"Super"} key = "s" func = "spawn" cmd = "scrot 'scrot from %m-%d-%Y ~ $wx$h.png'" [/key]
    [key] mod = {"Super"} key = "b" func = "spawn" cmd = "i3lock -c 000000" [/key]
    [key] mod = {"Super"} key = "r" func = "spawn" cmd = "gmrun" [/key]
    [key] mod = {"Super"} key = "m" func = "spawn" cmd = "xfce4-appfinder" [/key]
    [key] mod = {"Super"} key = "v" func = "spawn" cmd = "termite -e alsamixer" [/key]
    [key] mod = {"Super"} key = "Left" func = "spawn" cmd = "amixer set Master 5%- unmute" [/key]
    [key] mod = {"Super"} key = "Right" func = "spawn" cmd = "amixer set Master 5%+ unmute" [/key]
    [key] mod = {"Super"} key = "Down" func = "spawn" cmd = "amixer set Master 50%- unmute" [/key]
    [key] mod = {"Super"} key = "Up" func = "spawn" cmd = "amixer set Master 50%+ unmute" [/key]
    [key] mod = {"Alt"} key = "k" func = "spawn" cmd = "mpc next" [/key]
    [key] mod = {"Alt"} key = "j" func = "spawn" cmd = "mpc prev" [/key]
    [key] mod = {"Super"} key = "d" func = "spawn" cmd = "dmenu_path | dmenu_run -b -p 'run' -fn  '-*-cure-*-*-*-*-11-*-*-*-*-*-*-*' -nf '#6F6F6F' -nb '#D5D5D5' -sf '#DCDCDC' -sb '#383838'" [/key]
    [key] mod = {"Alt"} key = "m" func = "launcher" cmd = "l-man" [/key]
    [key] mod = {"Alt"} key = "r" func = "launcher" cmd = "rn" [/key]
    [key] mod = {"Super", "Shift"} key = "n" func = "spawn" cmd = "nitrogen" [/key]    
     [key] mod = {"Super"} key = "Return" func = "spawn" cmd = "termite" [/key]
     [key] mod = {"Super", "Shift"} key = "h" func = "spawn" cmd = "termite -e htop" [/key]
     [key] mod = {"Alt"} key = "Tab" func = "client_focus_next" [/key]
      
      [key] mod = {"Super", "Shift"} key = "q" func = "quit" [/key]
      [key] mod = {"Super", "Shift"} key = "r" func = "reload" [/key]
     
      # Tag manipulation
      [key] mod = {"Super"} key = "1" func = "tag_set" cmd = "0" [/key]
      [key] mod = {"Super"} key = "2" func = "tag_set" cmd = "1" [/key]
      [key] mod = {"Super"} key = "3" func = "tag_set" cmd = "2" [/key]
      [key] mod = {"Super"} key = "4" func = "tag_set" cmd = "3" [/key]
      [key] mod = {"Super"} key = "5" func = "tag_set" cmd = "4" [/key]
      [key] mod = {"Super"} key = "6" func = "tag_set" cmd = "5" [/key]
      [key] mod = {"Super"} key = "7" func = "tag_set" cmd = "6" [/key]
      [key] mod = {"Super"} key = "8" func = "tag_set" cmd = "7" [/key]
     
      [key] mod = {"Super", "Shift"} key = "1" func = "tag_client" cmd = "0" [/key]
      [key] mod = {"Super", "Shift"} key = "2" func = "tag_client" cmd = "1" [/key]
      [key] mod = {"Super", "Shift"} key = "3" func = "tag_client" cmd = "2" [/key]
      [key] mod = {"Super", "Shift"} key = "4" func = "tag_client" cmd = "3" [/key]
      [key] mod = {"Super", "Shift"} key = "5" func = "tag_client" cmd = "4" [/key]
      [key] mod = {"Super", "Shift"} key = "6" func = "tag_client" cmd = "5" [/key]
      [key] mod = {"Super", "Shift"} key = "7" func = "tag_client" cmd = "6" [/key]
      [key] mod = {"Super", "Shift"} key = "8" func = "tag_client" cmd = "7" [/key]

      [key] mod = {"Super", "Shift"} key = "Right" func = "tag_move_client_next" [/key]
      [key] mod = {"Super", "Shift"} key = "Left" func = "tag_move_client_prev" [/key]  
     
      [key] mod = {"Super"} key = "minus" func = "tag_del" [/key]
      [key] mod = {"Super", "Shift"} key = "minus" func = "tag_new" [/key]
     
      # tag function: cmd = nameofthetag
      #[key] mod = {"Super"} key = "z" func = "tag" cmd = "2" [/key]
     
      [key] mod = {"Control"} key = "Right" func = "tag_next" [/key]
      [key] mod = {"Control"} key = "Left"  func = "tag_prev" [/key]
     
      [key] mod = {"Control"} key = "Up"  func = "screen_next" [/key]
      [key] mod = {"Control"} key = "Down" func = "screen_prev" [/key]
     
      [key] mod = {"Super"} key = "x" func = "client_close" [/key]
     
  
      # Focus next client with direction
      [key] mod = {"Alt"} key = "h" func = "client_focus_left"   [/key]
      [key] mod = {"Alt"} key = "l" func = "client_focus_right"  [/key]
      [key] mod = {"Alt"} key = "k" func = "client_focus_top"    [/key]
      [key] mod = {"Alt"} key = "j" func = "client_focus_bottom" [/key]
     
      # swap next client with direction:
      [key] mod = {"Control", "Shift"} key = "h" func = "client_swap_left"   [/key]
      [key] mod = {"Control", "Shift"} key = "l" func = "client_swap_right"  [/key]
      [key] mod = {"Control", "Shift"} key = "k" func = "client_swap_top"    [/key]
      [key] mod = {"Control", "Shift"} key = "j" func = "client_swap_bottom" [/key]
     
      # Resize selected tiled client with direction
      [key] mod = {"Super"} key = "h" func = "client_resize_left"   cmd = "20" [/key]
      [key] mod = {"Super"} key = "l" func = "client_resize_left"   cmd = "-20" [/key]
      [key] mod = {"Super"} key = "k" func = "client_resize_top"    cmd = "20" [/key]
      [key] mod = {"Super"} key = "j" func = "client_resize_top"    cmd = "-20" [/key]
      [key] mod = {"Super", "Control"} key = "h" func = "client_resize_right"  cmd = "-20" [/key]
      [key] mod = {"Super", "Control"} key = "l" func = "client_resize_right"  cmd = "20" [/key]
      [key] mod = {"Super", "Control"} key = "k" func = "client_resize_bottom" cmd = "-20" [/key]
      [key] mod = {"Super", "Control"} key = "j" func = "client_resize_bottom" cmd = "20" [/key]
     
      # Tabbing command
      [key] mod = {"Alt", "Shift"} key = "h" func = "client_tab_left"   [/key]
      [key] mod = {"Alt", "Shift"} key = "l" func = "client_tab_right"  [/key]
      [key] mod = {"Alt", "Shift"} key = "k" func = "client_tab_top"    [/key]
      [key] mod = {"Alt", "Shift"} key = "j" func = "client_tab_bottom" [/key]
      [key] mod = {"Alt", "Shift"} key = "u" func = "client_untab" [/key]
      [key] mod = {"Super"}        key = "t" func = "client_tab_next_opened" [/key]
     
      # Layout manipulation
      [key] mod = {"Super"}          key = "m" func = "layout_vmirror" [/key]
      [key] mod = {"Super", "Shift"} key = "m" func = "layout_hmirror" [/key]
      [key] mod = {"Super"}          key = "z" func = "layout_rotate_right" [/key]
      [key] mod = {"Super"}          key = "r" func = "layout_rotate_left" [/key]
     
      [key] mod = {"Control", "Super", "Alt"} key = "h" func = "layout_integrate_left" [/key]
      [key] mod = {"Control", "Super", "Alt"} key = "j" func = "layout_integrate_bottom" [/key]
      [key] mod = {"Control", "Super", "Alt"} key = "k" func = "layout_integrate_top" [/key]
      [key] mod = {"Control", "Super", "Alt"} key = "l" func = "layout_integrate_right" [/key]
     
      # Layout set historic travelling function (TESTING)
      [key] mod = {"Super"} key = "o" func = "layout_prev_set" [/key]
      [key] mod = {"Super", "Shift"} key = "o" func = "layout_next_set" [/key]
     
      # Toggle client free/tile
      [key] mod = {"Super"} key = "f" func = "client_toggle_free" [/key]
     
      # Toggle client ignore_tag
      [key] mod = {"Super", "Shift"} key = "f" func = "client_toggle_ignore_tag" [/key]
     
      # Toggle infobar visibility
      [key] mod = {"Super", "Shift"} key = "h" func = "infobar_toggle_hide" cmd = "default" [/key]
     
      # Launcher
      [key] mod = {"Super"} key = "p" func = "launcher" cmd = "exec" [/key]
     
    [/keys] 
